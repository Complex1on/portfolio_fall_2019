{"version":3,"sources":["images/gotfeedback.png","images/seasonal_anime.png","images/streamy.png","components/Header.js","components/projects/Project.js","components/projects/ProjectList.js","components/App.js","history.js","index.js"],"names":["module","exports","Header","className","Project","props","alt","imgalt","src","img","href","project","description","githubhref","livehref","ProjectList","gotfeedback","streamy","seasonal_anime","App","createBrowserHistory","ReactDOM","render","document","querySelector"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,8GCM5BC,EAJA,WACX,OAAO,wBAAIC,UAAU,mBAAd,yB,gDCiCIC,EAlCC,SAAAC,GACZ,OACI,yBAAKF,UAAU,QACX,yBAAKA,UAAU,SACX,yBAAKG,IAAKD,EAAME,OAAQC,IAAKH,EAAMI,OAEvC,yBAAKN,UAAU,WACX,uBAAGO,KAAK,IAAIP,UAAU,UACjBE,EAAMM,SAEX,yBAAKR,UAAU,eACX,2BAAIE,EAAMO,cAEd,yBAAKT,UAAU,SACX,uBACIO,KAAML,EAAMQ,WACZV,UAAU,mCAFd,SAKI,uBAAGA,UAAU,uBAEjB,uBACIO,KAAML,EAAMS,SACZX,UAAU,qCAFd,OAKI,uBAAGA,UAAU,4BCgBtBY,EArCK,WAChB,OACI,yBAAKZ,UAAU,oBACX,+GAIA,kBAAC,EAAD,CACII,OAAO,UACPE,IAAKO,IACLL,QAAQ,gBACRC,YAAY,+GACZE,SAAS,qDACTD,WAAW,mDAGf,kBAAC,EAAD,CACIN,OAAO,UACPE,IAAKQ,IACLN,QAAQ,UACRC,YAAY,wMACZE,SAAS,kDACTD,WAAW,mDAGf,kBAAC,EAAD,CACIN,OAAO,UACPE,IAAKS,IACLP,QAAQ,iBACRC,YAAY,sCACZE,SAAS,mDACTD,WAAW,mD,OCvBZM,GCdAC,cDKH,WACR,OACI,yBAAKjB,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,SELZkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.c4c0c2f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gotfeedback.e1f3fa14.png\";","module.exports = __webpack_public_path__ + \"static/media/seasonal_anime.6cfb4a11.png\";","module.exports = __webpack_public_path__ + \"static/media/streamy.0f2b0974.png\";","import React from 'react';\n\nconst Header = () => {\n    return <h3 className=\"ui block header\">Evan Yip's Portfolio</h3>;\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Project = props => {\n    return (\n        <div className=\"item\">\n            <div className=\"image\">\n                <img alt={props.imgalt} src={props.img} />\n            </div>\n            <div className=\"content\">\n                <a href=\"#\" className=\"header\">\n                    {props.project}\n                </a>\n                <div className=\"description\">\n                    <p>{props.description}</p>\n                </div>\n                <div className=\"extra\">\n                    <a\n                        href={props.githubhref}\n                        className=\"ui right floated primary button\"\n                    >\n                        Github\n                        <i className=\"right github icon\" />\n                    </a>\n                    <a\n                        href={props.livehref}\n                        className=\"ui right floated secondary button\"\n                    >\n                        Live\n                        <i className=\"right chevron icon\" />\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Project;\n","import React from 'react';\n\nimport gotfeedback from '../../images/gotfeedback.png';\nimport seasonal_anime from '../../images/seasonal_anime.png';\nimport streamy from '../../images/streamy.png';\nimport Project from './Project';\n\nconst ProjectList = () => {\n    return (\n        <div className=\"ui divided items\">\n            <h3>\n                Please allow some time for the heroku application to wake up\n                when clicking live\n            </h3>\n            <Project\n                imgalt=\"imgalt1\"\n                img={gotfeedback}\n                project=\"Got Feedback?\"\n                description=\"Feedback application allowing users to send out mass emails with a question and see the number of responses.\"\n                livehref=\"https://complexion-got-feedback-app.herokuapp.com/\"\n                githubhref=\"https://github.com/Complex1on/Got_Feedback_App\"\n            />\n\n            <Project\n                imgalt=\"imgalt2\"\n                img={streamy}\n                project=\"Streamy\"\n                description=\"Allows users to login and create/delete streams then stream to the service. Please note the RTMP server is not currently working at the moment. Users can only create/delete/update streams right now\"\n                livehref=\"https://complexion-react-streamy.herokuapp.com/\"\n                githubhref=\"https://github.com/Complex1on/react_stream_app\"\n            />\n\n            <Project\n                imgalt=\"imgalt3\"\n                img={seasonal_anime}\n                project=\"Seasonal Anime\"\n                description=\"Find anime based on season and year\"\n                livehref=\"https://complexion-seasonal-anime.herokuapp.com/\"\n                githubhref=\"https://github.com/Complex1on/seasonal-anime\"\n            />\n        </div>\n    );\n};\n\nexport default ProjectList;\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './Header';\nimport ProjectList from './projects/ProjectList';\nimport history from '../history';\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <Header />\n            <ProjectList />\n        </div>\n    );\n};\n\nexport default App;\n\n/*\n     <div className=\"ui container\">\n            <Router history={history} basename={process.env.PUBLIC_URL}>\n                <div>\n                    <Header />\n                    <Switch>\n                        <Route path=\"/\" exact component={ProjectList} />\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n*/\n\n/* <div className=\"ui container\">\n            <Header />\n            <ProjectList />\n        </div> \n*/\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}